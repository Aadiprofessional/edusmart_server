-- Drop table if it exists and recreate
DROP TABLE IF EXISTS document_summaries;

-- Create document_summaries table
CREATE TABLE document_summaries (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL,
    title VARCHAR(500) NOT NULL,
    summary TEXT NOT NULL,
    mindmap_data JSONB,
    source_type VARCHAR(10) NOT NULL CHECK (source_type IN ('file', 'text')),
    file_name VARCHAR(255),
    file_type VARCHAR(100),
    file_size INTEGER,
    document_pages JSONB, -- Array of base64 image strings
    page_summaries JSONB, -- Array of page summary objects
    text_input TEXT,
    processing_status VARCHAR(20) DEFAULT 'completed' CHECK (processing_status IN ('processing', 'completed', 'failed')),
    metadata JSONB DEFAULT '{}',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes for better performance
CREATE INDEX idx_document_summaries_user_id ON document_summaries(user_id);
CREATE INDEX idx_document_summaries_created_at ON document_summaries(created_at DESC);
CREATE INDEX idx_document_summaries_source_type ON document_summaries(source_type);
CREATE INDEX idx_document_summaries_processing_status ON document_summaries(processing_status);

-- Create updated_at trigger
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_document_summaries_updated_at 
    BEFORE UPDATE ON document_summaries 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- Add helpful comments
COMMENT ON TABLE document_summaries IS 'Stores document summaries and mindmaps generated by users';
COMMENT ON COLUMN document_summaries.user_id IS 'Reference to the user who created the summary';
COMMENT ON COLUMN document_summaries.title IS 'Title/name of the document summary';
COMMENT ON COLUMN document_summaries.summary IS 'The generated text summary';
COMMENT ON COLUMN document_summaries.mindmap_data IS 'JSON structure for the mindmap visualization';
COMMENT ON COLUMN document_summaries.source_type IS 'Whether the summary was generated from a file upload or text input';
COMMENT ON COLUMN document_summaries.file_name IS 'Original filename if source_type is file';
COMMENT ON COLUMN document_summaries.file_type IS 'MIME type of the uploaded file';
COMMENT ON COLUMN document_summaries.file_size IS 'Size of the uploaded file in bytes';
COMMENT ON COLUMN document_summaries.document_pages IS 'Array of base64-encoded page images for PDFs';
COMMENT ON COLUMN document_summaries.page_summaries IS 'Array of individual page summaries with metadata';
COMMENT ON COLUMN document_summaries.text_input IS 'Original text input if source_type is text';
COMMENT ON COLUMN document_summaries.processing_status IS 'Current processing status of the document';
COMMENT ON COLUMN document_summaries.metadata IS 'Additional metadata like processing time, AI model used, etc.'; 